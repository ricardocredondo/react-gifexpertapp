{"version":3,"sources":["components/AddCategories.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategories","setCategorias","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","GifGridItem","id","title","url","src","alt","getGifs","categoria","a","fetch","encodeURI","res","json","data","datos","map","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"4SAgCeA,EA5BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACE,yBAASC,UAAU,iBAAnB,SACE,sBAAMC,SARW,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,GAC7BT,GAAc,SAACU,GAAD,OAAUR,GAAV,mBAAyBQ,QAKTN,UAAU,kBAAxC,SACE,uBACEO,KAAK,OACLP,UAAU,aACVQ,MAAOV,EACPW,SAhBkB,SAACP,GACzBH,EAAcG,EAAEQ,OAAOF,QAgBjBG,YAAY,0B,QCXPC,G,MATK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKf,UAAU,oDAAf,UACE,qBAAKgB,IAAKD,EAAKf,UAAU,mBAAmBiB,IAAKH,GAAYD,GAC7D,mBAAGb,UAAU,oBAAb,SAAkCc,S,uBCPzBI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACLC,MAAM,mFAAD,OAC8DC,UACjFH,GAFmB,uCADA,cACjBI,EADiB,gBAMAA,EAAIC,OANJ,uBAMfC,EANe,EAMfA,KAEFC,EAAQD,EAAKE,KACjB,YAOE,MAAO,CACLd,GAFE,EALJA,GAQEC,MAHE,EAJJA,MAQEC,IAJE,EAHJa,OACEC,iBAAoBd,QAbH,kBAuBhBW,GAvBgB,2CAAH,sDCoBPI,G,MAfC,SAAC,GAAmB,IAAjBX,EAAgB,EAAhBA,UACjB,ECH0B,SAACA,GAC3B,MAA0BtB,mBAAS,CACjC4B,KAAM,GACNM,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACRhB,EAAQC,GAAWgB,MAAK,SAACC,GACvBH,EAAS,CACPR,KAAMW,EACNL,SAAS,SAGZ,CAACZ,IAEGa,EDX2BK,CAAalB,GAAjCS,EAAd,EAAQH,KAAcM,EAAtB,EAAsBA,QACtB,OACE,0BAAS/B,UAAU,qBAAnB,UACE,oBAAIA,UAAU,kBAAd,SAAiCmB,IAChCY,GAAW,wCACZ,qBAAK/B,UAAU,4BAAf,SACG4B,EAAOD,KAAI,SAACW,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIzB,cEWjB0B,G,MAnBM,WACnB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KACA,OACE,sBAAKI,UAAU,YAAf,UACE,wBAAQA,UAAU,oBAAlB,SACE,oBAAIA,UAAU,oBAAd,4BAEF,uBAAMA,UAAU,kBAAhB,UACE,cAAC,EAAD,CAAeJ,cAAeA,IAC9B,yBAASI,UAAU,qBAAnB,SACGwC,EAAWb,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAASA,UAAWA,GAAgBA,gBCXhDsB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.5b3449c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './AddCategories.css';\n\nconst AddCategories = ({ setCategorias }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 0) {\n      setCategorias((cat) => [inputValue, ...cat]);\n    }\n  };\n  return (\n    <article className=\"add__container\">\n      <form onSubmit={handleSubmit} className=\"add__formulario\">\n        <input\n          type=\"text\"\n          className=\"add__input\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"buscar categoria\"\n        />\n      </form>\n    </article>\n  );\n};\nAddCategories.propTypes = {\n  setCategorias: PropTypes.func.isRequired,\n};\nexport default AddCategories;\n","import React from 'react';\nimport './GifGridItem.css';\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"gifgriditem animate__animated animate__backInDown\">\n      <img src={url} className=\"gifgriditem__img\" alt={title} key={id} />\n      <p className=\"gifgriditem__text\">{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","  export const getGifs = async (categoria) => {\n  const res = await fetch(\n    `https://api.giphy.com/v1/gifs/search?api_key=zqVLXzB6OO1NpOn1ncwoZp5a27DI1Ydb&q=${encodeURI(\n      categoria\n    )}&limit=8&offset=0&rating=g&lang=en`\n  );\n  const { data } = await res.json();\n\n  const datos = data.map(\n    ({\n      id,\n      title,\n      images: {\n        downsized_medium: { url },\n      },\n    }) => {\n      return {\n        id,\n        title,\n        url,\n      };\n    }\n  );\n  return datos;\n};\n","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport './GifGrid.css';\n\nconst GifGrid = ({ categoria }) => {\n  const { data: images, loading } = useFetchGifs(categoria);\n  return (\n    <section className=\"gifgrid__categoria\">\n      <h3 className=\"gifgrid__titulo\">{categoria}</h3>\n      {loading && <p>Loading</p>}\n      <div className=\"gifgrid_contenedor-imagen\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (categoria) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(categoria).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [categoria]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategories from './AddCategories';\nimport GifGrid from './GifGrid';\nimport './GifExpertApp.css';\n\nconst GifExpertApp = () => {\n  const [categorias, setCategorias] = useState([]);\n  return (\n    <div className=\"container\">\n      <header className=\"gifexpert__header\">\n        <h1 className=\"gifexpert__titulo\">GifExpertApp</h1>\n      </header>\n      <main className=\"gifexpert__main\">\n        <AddCategories setCategorias={setCategorias} />\n        <article className=\"gifgrid__container\">\n          {categorias.map((categoria) => (\n            <GifGrid categoria={categoria} key={categoria} />\n          ))}\n        </article>\n      </main>\n    </div>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}